:root {
	--_color: var(--page-color);
	--_bg-color: var(--page-bg-color);

	background-color: var(--_bg-color);
	color: var(--_color);
	font: var(--font-weight-normal) var(--page-font-size) / var(--line-height-wide) sans-serif;

	@media (prefers-reduced-motion: no-preference) {
		scroll-behavior: smooth;
	}

	@media print {
		--_color: var(--color-black);
		--_bg-color: var(--color-white);
	}
}

:focus {
	outline: var(--outline-width) solid var(--outline-color);
}

[tabindex="-1" i]:focus {
	outline: none;
}

:any-link {
	outline-offset: var(--outline-offset);
	text-decoration-thickness: from-font;
}

:link {
	color: var(--link-color);

	&:hover {
		color: var(--link-color-hover);
	}
}

:visited {
	color: var(--link-color-visited);

	&:hover {
		color: var(--link-color-hover);
	}
}

::placeholder {
	opacity: 0.54;
	color: var(--color-black);
}

pre {
	tab-size: 2;

	@media print {
		white-space: pre-wrap;
	}
}

em {
	&:lang(ja) {
		font-weight: var(--font-weight-bold);
	}
}

small {
	font-size: calc(100% / pow(var(--font-ratio), 2));
	font-weight: var(--font-weight-normal);
}

dfn {
	&::before {
		content: var(--_open, "“");
	}

	&::after {
		content: var(--_close, "”");
	}

	&:lang(ja) {
		--_open: "「";
		--_close: "」";
	}
}

code:not([class]) {
	border-radius: var(--border-radius-normal);
	background-color: var(--color-ultralightgreen);
	padding-block: 0.25em;
	color: var(--color-green);

	:is(h1, h2, h3, h4, h5, h6, hgroup, pre, a) & {
		border-radius: initial;
		background-color: initial;
		padding-block: initial;
		color: inherit;
	}

	/* for Chrome, Safari */
	:visited & {
		color: var(--link-color-visited);
	}

	/* for Chrome, Safari */
	:visited:hover & {
		color: var(--link-color-hover);
	}
}

var {
	font-family: serif;

	&:lang(ja) {
		font-style: normal;
	}
}

mark {
	border: 1px solid var(--color-lightyellow);
	background: var(--color-lightyellow);
	font-weight: var(--font-weight-bold);

	@media print {
		border-color: currentColor;
	}
}

ins:not(.adsbygoogle) {
	background-color: var(--color-verylightred);
	text-decoration-style: dashed;
	color: var(--color-red);
}

del {
	background-color: var(--color-bg-light);
	text-decoration-style: double;
	color: var(--color-gray);
}

input:is([type="radio" i], [type="checkbox" i]) {
	accent-color: var(--color-skyblue);
}

w0s-input-switch {
	--inline-size: 3em;
	--block-size: 1.5em;
	--thumb-radius: calc(0.75em - 1px);
}

x-popover {
	--_border-color: var(--color-border-light);
	--_hide-button-padding: 6px;
	--_hide-button-image-size: 24px;

	outline: none;

	&::part(content) {
		outline-offset: -1px;
		border: 1px solid var(--_border-color);
		border-radius: var(--border-radius-normal);
		background: var(--color-white);
		padding: 15px;
		max-inline-size: min(30em, 100%);
		color: var(--color-black);
		font-size: calc(100% / pow(var(--font-ratio), 1));
	}

	&::part(content):focus {
		outline: var(--outline-width-bold) solid var(--outline-color);
	}

	&::part(content):hover {
		box-shadow: 0 0 0.5em var(--_border-color);
	}

	&::part(content)::before {
		display: block flow;
		float: inline-end;
		block-size: calc(var(--_hide-button-image-size) + var(--_hide-button-padding) * 2);
		inline-size: calc(var(--_hide-button-image-size) + var(--_hide-button-padding) * 2);
		content: "";
	}

	&::part(hide-button) {
		--_border-color: var(--color-white);
		--_background-color: transparent;

		position: absolute;
		inset-block-start: 1px;
		inset-inline-end: 1px;
		outline-offset: -1px;
		border: 1px solid var(--_border-color);
		border-radius: var(--border-radius-normal);
		background: var(--_background-color);
		padding: var(--_hide-button-padding);
	}

	&::part(hide-button):focus {
		outline: var(--outline-width-bold) solid var(--outline-color);
	}

	&::part(hide-button):hover {
		--_border-color: var(--color-bg-light);
		--_background-color: var(--color-bg-superlight);
	}
}
