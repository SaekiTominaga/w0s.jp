---
import type { StructuredData } from '@type/types.js';
import StructuredDataUtil from '@util/StructuredData.js';

interface Props {
	pagePath: string;
	structuredData: StructuredData;
}

const { pagePath, structuredData } = Astro.props;

const jsonLd = StructuredDataUtil.getJsonLd(structuredData, { site: import.meta.env.SITE });
---

<head>
	{import.meta.env.DEV && <meta charset="utf-8" />}
	<meta name="viewport" content="width=device-width,initial-scale=1" />

	<link rel="stylesheet" href="/assets/style/w0s.css" />
	<link rel="stylesheet" href="/assets/style/layout_full.css" title="通常表示" />
	<link rel="alternate stylesheet" href="/assets/style/layout_reader.css" title="リーダー表示" />
	<link rel="stylesheet" href="/assets/style/layout_reader.css" media="print" />
	{structuredData.opensearch !== undefined && <link rel="search" href={structuredData.opensearch.path} type="application/opensearchdescription+xml" title={structuredData.opensearch.name} />}

	<script src="/assets/script/trusted-types.js" defer="" is:inline></script>
	<script src="/assets/script/w0s.mjs" type="module"></script>
	{structuredData.moduleScripts?.map((fileName) => <script src={`/assets/script/${fileName}`} type="module" />)}
	<script src="https://analytics.w0s.jp/matomo/matomo.js" async="" is:inline></script>
	<script src="/assets/script/analytics.js" defer="" is:inline></script>

	<title>{structuredData.title}</title>

	{structuredData.description !== undefined && <meta name="description" content={structuredData.description} />}
	{
		(structuredData.type === undefined || structuredData.type !== 'website') && structuredData.image !== undefined && (
			<Fragment>
				<meta property="og:title" content={structuredData.title} />
				<meta property="og:type" content={structuredData.type ?? 'article'} />
				<meta property="og:image" content={structuredData.image} />
				<meta property="og:url" content={`${Astro.site}${pagePath.substring(1)}`} />
				<meta property="og:locale" content="ja_JP" />
				<meta property="og:site_name" content="w0s.jp" />
				{structuredData.description !== undefined && <meta property="og:description" content={structuredData.description} />}
			</Fragment>
		)
	}

	{jsonLd !== undefined && <script type="application/ld+json" set:html={JSON.stringify(jsonLd, undefined, '\t')} />}
</head>
