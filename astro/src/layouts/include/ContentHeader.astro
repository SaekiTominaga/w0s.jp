---
import LinkBullet from '@components/LinkBullet.astro';
import type { StructuredData } from '@type/types.js';

interface Props {
	pagePath: string;
	structuredData: StructuredData;
	tocData?: Map<string, string>;
}

const { pagePath, structuredData, tocData } = Astro.props;
---

<div class="l-content__header">
	{
		structuredData.breadcrumb !== undefined && (
			<p class="p-topic-path">
				{structuredData.breadcrumb.map((breadcrumbItem, index) => (
					<>
						{index === 0 && <a href={breadcrumbItem.path}>ホーム</a>}
						{index >= 1 && (
							<>
								<span class="p-topic-path__separator">&gt;</span>
								<a href={breadcrumbItem.path}>{breadcrumbItem.name}</a>
							</>
						)}
					</>
				))}
				<span class="p-topic-path__separator">&gt;</span>
				<a aria-current="page">現在のページ</a>
			</p>
		)
	}

	<hgroup class="p-title">
		{structuredData.subHeading === undefined && <h1>{structuredData.heading ?? structuredData.title}</h1>}
		{
			structuredData.subHeading !== undefined && (
				<h1>
					{structuredData.heading ?? structuredData.title}
					<span class="p-title__sub-hdg">（{structuredData.subHeading}）</span>
				</h1>
			)
		}
		{
			structuredData.dateModified !== undefined && (
				<p class="p-title__update">
					<time datetime={structuredData.dateModified.format('YYYY-MM-DD')}>{structuredData.dateModified.format('YYYY年M月D日')}</time>更新
				</p>
			)
		}
	</hgroup>

	{
		structuredData.localNav !== undefined && (
			<nav aria-label={structuredData.localNav.label}>
				<ul class="p-local-nav">
					{structuredData.localNav.items.map((localNavItem) => (
						<li>
							{localNavItem.path !== pagePath && <LinkBullet href={localNavItem.path}>{localNavItem.name}</LinkBullet>}
							{localNavItem.path === pagePath && <LinkBullet>{localNavItem.name}</LinkBullet>}
						</li>
					))}
				</ul>
			</nav>
		)
	}

	{structuredData.description !== undefined && <p class="p-description">{structuredData.description}</p>}

	{
		tocData !== undefined && tocData.size >= 2 && structuredData.tocDirection === undefined && (
			<ol class="p-toc" aria-label="目次">
				{[...tocData].map(([id, headingHtml]) => (
					<li>
						<a href={`#${encodeURIComponent(id)}`} set:html={headingHtml} />
					</li>
				))}
			</ol>
		)
	}
	{
		tocData !== undefined && tocData.size >= 2 && structuredData.tocDirection !== undefined && (
			<ol class:list={['p-toc', `-${structuredData.tocDirection}`]} aria-label="目次">
				{[...tocData].map(([id, headingText]) => (
					<li>
						<a href={`#${encodeURIComponent(id)}`} set:html={headingText} />
					</li>
				))}
			</ol>
		)
	}
</div>
