---
import fs from 'node:fs';
import { env } from '@w0s/env-value-type';
import Layout from '@layouts/Admin.astro';
import { getParams as getRequestParams, string as requestString } from '@util/request.js';
import { init as ssrInit } from '@util/ssr.js';
import type { StructuredData } from '@type/types.js';

interface RequestQuery {
	dir: string | null;
	file: string | null;
}

export const prerender = false;
const { logger } = ssrInit(Astro, { dev: import.meta.env.DEV });

const structuredData: StructuredData = {
	title: 'ウェブ巡回（リソース）',
	breadcrumb: [{ path: '/admin/crawler-resource/', name: 'ウェブ巡回（リソース）' }],
};

const requestParams = getRequestParams(Astro.url);

const requestQuery: RequestQuery = {
	dir: requestString(requestParams.get('dir')),
	file: requestString(requestParams.get('file')),
};

if (requestQuery.dir !== null && requestQuery.file !== null) {
	const filePath = `${env('CRAWLER_RESOURCE_LOG_DIR')}/${requestQuery.dir}/${requestQuery.file}`;

	/* ソースコード閲覧 */
	try {
		const file = (await fs.promises.readFile(filePath)).toString();
		return new Response(file);
	} catch (e) {
		if (e instanceof SyntaxError) {
			logger.warn(e.message);
		} else {
			logger.error(e);
		}
	}
}
---

<Layout astroFilePath={Astro.self.moduleId} structuredData={structuredData}>
	<p><strong>データがありません。</strong></p>
</Layout>
