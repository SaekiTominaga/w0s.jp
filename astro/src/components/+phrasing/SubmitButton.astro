---
interface Props {
	type?: 'button' | 'reset';
	buttonStyle?: 'compact' | 'cancel';
	name?: string;
	value?: string;
	formmethod?: 'get' | 'post';
	id?: string;
	class?: string;
}

const { type, buttonStyle, name, value, formmethod, id, class: className } = Astro.props;
---

<button class:list={['submit', buttonStyle !== undefined ? `-${buttonStyle}` : undefined, className]} type={type} name={name} value={value} formmethod={formmethod} id={id} {...Astro.props}><slot /></button>

<style>
	@layer component {
		.submit {
			--_border-color: var(--_bg-color);
			--_bg-color: hsl(204deg 100% 42%);
			--_bg-color-hover: hsl(204deg 100% 48%); /* 太字の 15pt なのでコントラスト比の基準は 3:1 以上 */
			--_padding-block: 0.5em;
			--_padding-inline: 1em;
			--_color: var(--color-white);
			--_font-size: calc(100% * pow(var(--font-ratio), 2));
			--_ripple-color: var(--color-white);
			--_ripple-opacity: 0.25;
			--_ripple-transition-duration: 0.5s;

			display: inline flow-root;
			outline-offset: 1px;
			outline-width: var(--outline-width-bold);
			contain: layout; /* ripple effect */
			border: 1px solid var(--_border-color);
			border-radius: var(--border-radius-normal);
			background-color: var(--_bg-color);
			padding: var(--_padding-block) var(--_padding-inline);
			overflow: hidden; /* ripple effect */
			vertical-align: middle;
			line-height: var(--line-height-nowrap);
			white-space: nowrap;
			color: var(--_color);
			font-family: system-ui, sans-serif; /* Chrome で下側の空きが出てしまう対策 */
			font-size: var(--_font-size);
			font-weight: var(--font-weight-bold);

			&:enabled {
				&:hover {
					--_bg-color: var(--_bg-color-hover);
				}

				/* ripple effect */
				&::before {
					position: absolute;
					inset: 0;
					transform: scale(4);
					transition: var(--_ripple-transition-duration);
					opacity: 0;
					background-image: radial-gradient(circle, var(--_ripple-color) 25%, transparent 0);
					block-size: 100%;
					inline-size: 100%;
					content: '';
				}

				/* ripple effect */
				&:active::before {
					transform: scale(0);
					transition: initial;
					opacity: var(--_ripple-opacity);
				}
			}

			&:disabled {
				--_color: var(--color-gray);
				--_bg-color: var(--color-bg-verydark);
			}

			/* コンパクトなボタン */
			&.-compact {
				--_padding-block: 0.375em;
				--_padding-inline: 0.375em;
				--_font-size: 100%;
			}

			/* キャンセルボタン */
			&.-cancel {
				--_color: var(--color-darkgray);
				--_bg-color: var(--color-white);
				--_bg-color-hover: var(--color-bg-superlight);
				--_border-color: var(--_color);
				--_font-size: 100%;
				--_ripple-color: var(--color-black);
			}
		}
	}
</style>
