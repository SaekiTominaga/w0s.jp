---
interface Props {
	id?: string;
	full?: boolean;
	scroll?: boolean;
	font?: 'small';
}

const { id, full, scroll, font } = Astro.props;
---

<div id={id} class:list={['table', { '-full': full }, { '-scroll': scroll }, { '-font-small': font === 'small' }]}>
	<table>
		<slot />
	</table>
</div>

<style>
	@layer component {
		.table {
			--_caption-text-align: center;
			--stickey-thead-block-size: 1em;
			--_border-color: var(--color-border-dark);
			--_color: var(--color-black);
			--_bg-color: var(--color-white);
			--_font-size-base: 100%;
			--_text-align: start;

			@media print {
				--_border-color: var(--color-black);
			}

			/* 全幅 */
			&.-full {
				--_inline-size: 100%;
			}

			/* 横スクロール */
			&.-scroll {
				--_caption-text-align: start;

				@media not print {
					--_text-wrap: nowrap;

					padding-block-end: 2px; /* 横スクロールバー上部の空き */
					overflow-x: auto;
				}
			}

			/* 文字サイズを小さくする */
			&.-font-small {
				--_font-size-base: calc(100% / pow(var(--font-ratio), 2));
			}

			& > :global(table) {
				inline-size: var(--_inline-size);
				line-height: var(--line-height-narrow);
			}

			& > :global(table > caption) {
				margin-block-end: 0.25em;
				text-align: var(--_caption-text-align);
				font-weight: var(--font-weight-bold);
			}

			& > :global(table > :is(thead + tbody, tbody + tbody, tfoot)) {
				border-block-start: 2px solid var(--_border-color);
			}

			& > :global(table :is(td, th)) {
				border: 1px solid var(--_border-color);
				background: var(--_bg-color);
				background-clip: padding-box; /* for Firefox, Safari (<thead> sticky) */
				padding: 0.75em min(1dvi, 10px);
				text-align: var(--_text-align);
				white-space: var(--_text-wrap);
				color: var(--_color);
				font-size: clamp(calc(var(--_font-size-base) / pow(var(--font-ratio), 1)), 2svi, var(--_font-size-base));
			}

			& > :global(table > thead) {
				--_bg-color: var(--color-bg-light);
				--_text-align: center;

				position: sticky;
				inset-block-start: 0;
				z-index: 1;
			}

			& > :global(table > tbody th) {
				--_bg-color: var(--color-bg-superlight);
			}

			& > :global(table > tfoot) {
				--_bg-color: var(--color-bg-light);
			}

			& > :global(table > :is(tbody, tfoot) :target) {
				scroll-margin-block-start: var(--stickey-thead-block-size);
			}
		}
	}
</style>
