/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HTTP = number;
export type StrictTransportSecurity = string;
export type ContentSecurityPolicyHTML = string;
export type ContentSecurityPolicyHTML1 = string;
export type ContentSecurityPolicyReportOnlyHTML = string;
export type Threshold = string;
export type NoName4 = string;
export type NoName5 = string[];
export type NoName6 = string[];
export type NoName8 = string[];
export type NoName9 = string[];
export type NoName12 = string;
export type NoName14 = string[];
export type NoName15 = string;
export type NoName13 = {
  paths: NoName14;
  value: NoName15;
}[];
export type NoName17 = string[];
export type NoName18 = string;
export type NoName16 = {
  extensions: NoName17;
  value: NoName18;
}[];
export type CORS1 = string[];
export type NoName20 = string[];
export type NoName21 = string[];
export type Directory = string[];
export type NoName22 = string;
export type Htpasswd = string;
export type BasicAuthentication = {
  directory: Directory;
  realm: NoName22;
  htpasswd: Htpasswd;
}[];
export type FilepathFor401Unauthorized = string;
export type FilepathFor403Forbidden = string;
export type FilepathFor404NotFound = string;
export type FilepathFor500InternalServerError = string;
export type NoName24 = string;
export type NoName25 = string;
export type NoName27 = string;
export type NoName28 = string;
export type Or = string;
export type NoName26 = {
  from: NoName27;
  to: NoName28;
  type: Or;
  [k: string]: unknown;
}[];
export type NoName29 = string;
export type AmazonAds = string;
export type Crawler = string;
export type Blog = string;
export type Tokyucarhistory = string;
export type Kumetatwitter = string;
export type Madokalibrary = string;
export type Madokawebarchive = string;
export type Madokatwitter = string;
export type NoName30 = string;
/**
 * https://affiliate.amazon.co.jp/assoc_credentials/home
 */
export type NoName31 = string;
/**
 * https://affiliate.amazon.co.jp/assoc_credentials/home
 */
export type NoName32 = string;
/**
 * https://webservices.amazon.com/paapi5/documentation/locale-reference.html
 */
export type TargetAmazonLocale = string;
/**
 * https://webservices.amazon.com/paapi5/documentation/common-request-parameters.html#host-and-region
 */
export type TheHostValueOfTheTargetLocaleToWhichYouAreSendingRequests = string;
/**
 * https://webservices.amazon.com/paapi5/documentation/common-request-parameters.html#host-and-region
 */
export type TheAWSRegionOfTheTargetLocaleToWhichYouAreSendingRequests = string;

export interface W0SJp {
  port: HTTP;
  response: NoName;
  static: NoName3;
  errorpage: NoName23;
  views: NoName24;
  temp: NoName25;
  redirect: NoName26;
  logger: Logger;
  mail: EMail;
  sqlite: SQLite;
  paapi: AmazonProductAdvertisingAPI;
}
export interface NoName {
  header: NoName1;
  compression: NoName2;
}
export interface NoName1 {
  hsts: StrictTransportSecurity;
  csp: ContentSecurityPolicyHTML;
  csp_html: ContentSecurityPolicyHTML1;
  cspro_html: ContentSecurityPolicyReportOnlyHTML;
}
export interface NoName2 {
  threshold: Threshold;
}
export interface NoName3 {
  root: NoName4;
  extensions?: NoName5;
  indexes?: NoName6;
  headers: NoName7;
  auth_basic?: BasicAuthentication;
}
export interface NoName7 {
  mime: MIME;
  cache_control?: NoName10;
  cors?: CORS;
  source_map?: SourceMap;
}
export interface MIME {
  path: MIME1;
  extension: MIME2;
}
export interface MIME1 {
  [k: string]: NoName8;
}
export interface MIME2 {
  [k: string]: NoName9;
}
export interface NoName10 {
  development: NoName11;
  production: NoName19;
}
export interface NoName11 {
  default: NoName12;
  path?: NoName13;
  extension?: NoName16;
}
export interface NoName19 {
  default: NoName12;
  path?: NoName13;
  extension?: NoName16;
}
export interface CORS {
  directory: CORS1;
  origin: NoName20;
}
export interface SourceMap {
  extensions?: NoName21;
}
export interface NoName23 {
  path_401: FilepathFor401Unauthorized;
  path_403: FilepathFor403Forbidden;
  path_404: FilepathFor404NotFound;
  path_500: FilepathFor500InternalServerError;
}
export interface Logger {
  path: NoName29;
}
export interface EMail {
  smtp: string;
  user: string;
  password: string;
  port: number;
  from: string;
  to: string;
}
export interface SQLite {
  db: DBNode;
}
export interface DBNode {
  amazon_ads: AmazonAds;
  crawler: Crawler;
  blog: Blog;
  tokyu_car_history: Tokyucarhistory;
  kumeta_twitter: Kumetatwitter;
  madoka_library: Madokalibrary;
  madoka_web_archive: Madokawebarchive;
  madoka_twitter: Madokatwitter;
}
export interface AmazonProductAdvertisingAPI {
  request: CommonRequestParameters;
}
/**
 * https://webservices.amazon.com/paapi5/documentation/common-request-parameters.html
 */
export interface CommonRequestParameters {
  partner_tag: NoName30;
  access_key: NoName31;
  secret_key: NoName32;
  marketplace: TargetAmazonLocale;
  host: TheHostValueOfTheTargetLocaleToWhichYouAreSendingRequests;
  region: TheAWSRegionOfTheTargetLocaleToWhichYouAreSendingRequests;
}
